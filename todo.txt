实现一个三消类游戏。

游戏异步进行，需要实现任务、棋盘、特效。

棋盘：
1. 棋盘结构。使用二维数组表示，x向右、y向下。0表示镂空,1表示存在。
2. 内容物。使用二维数组表示，0表示空，1到6表示各种内容。
*单元格对象：*
3. 流动规则，使用二维数组排列的列表表示。每一个非镂空的位置都可以依次选择多个位置吸收内容，如果不存在上一个位置，就给自己加上生成器作为内容来源。当异步调用该位置的流动函数之后，将从可能的源要求一个内容物，如果所有源都不存在内容物，那么在上一个位置添加自身，以在可能的时候立刻调用自身的流动函数。（1. 单一方向；2. 交错垂直双方向；3. 隔列上下；4. 完全混沌（随机选择三个相邻格子作为内容来源，随机为自身加上生成器））
4. 下一个位置。使用二维数组排列的有序列表表示。当下一个位置不为空的时候，如果该位置没有内容物，那么调用它的流动函数。同时由于自身也被清空，调用自身的流动函数。
5. 任务对象：消除指定对象的时候调用，更新任务进度。
+ 流动函数：从上一个位置取出内容物放入自身，同时调用内容物的动效函数让它移动入自身的位置。
+ 填入函数：在内容物填入自身的时候调用，自身必须为空。检查是否存在下一个位置，如果没有，就让内容物存在于自身之中，然后令棋盘检查是否能够进行消除。
**
+ 检查函数（需要调用位置）：全盘检查是否能够发生消除，调用对应位置内容物的消除函数，或者改变对应位置内容物的属性。同时检查动效计数器，如果为0就检查是否能够消除，不能消除的话就直接刷新全盘。
6. 动效计数器：包含所有正在移动的内容物。

内容物：
1. 类型：数字1~6，-1表示万消机。
1.5: 特效类型：水平（1）、竖直（2）、水平竖直（3）
2. 所属坐标：坐标
3. 动效位置：每隔10ms调用位置刷新函数，刷新自己的位置。位置列表放入这个列表中，每次取一个出来，直至到达目标位置，然后调用目标位置的填入函数。
+ 动效函数
+ 删除函数：删除自身，然后调用任务函数。

生成器：
+ 参数：内容物种类，概率分布（默认均匀），相关长度
+ 流动函数：在目标位置产生一个内容物，并调用内容物的动效函数。

任务：
+ 明确任务和任务进度条
+ 给出API，在调用之后更新自身任务。


实现语言：CSS+HTML+JS

步骤：
1. 搭一个HTML框架，配合最简单的JS部分，正确显示棋盘和对应的内容物。
  1) 快速搭建最基本的框架，包括空白style，container和script标签。
  2) 创建棋盘类，使用JS代码动态生成元素，创建一个13*13的棋盘
  3) 为每个元素添加board_cell, board_row, board_container标签
  4) 为这些类别添加flex显示类型，再固定这些东西的大小和相对位置。
  5) 为格子添加渐变的阴影，让它们更加好看。
  6) 创建内容物类，使用JS代码动态生成元素，使用绝对位置和style.left/style.top的办法把内容物放在棋盘上。
  7) 绘制内容物的图片，用JS代码读取图片并放入该元素上。
  8) 为内容物加入特效箭头。
2. 实现基础游戏逻辑
3. 实现任务系统，在HTML页面上显示
4. 实现结算页面、菜单和难度设置、棋盘选择的功能。
5. 本地保存游戏相关信息，注意此处需要加密保存。

